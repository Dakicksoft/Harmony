@page "/projects/{id}/sprints"
@inject Microsoft.Extensions.Localization.IStringLocalizer<Sprints> _localizer
@using Harmony.Application.Features.Boards.Queries.GetBacklog
@using Harmony.Application.Features.Boards.Queries.GetSprints
@using Harmony.Application.Helpers
@using Harmony.Client.Infrastructure.Helper
@using Harmony.Domain.Enums

<style>
    .mud-table-cell-custom-group {
        font-weight: 500;
    }

    .mud-table-cell-custom-group-footer {
        padding-bottom: 50px;
        text-align: right;
    }
</style>

<MudPaper Style="height:calc(100vh - 100px);overflow:auto">
    <MudTable Hover="true" Breakpoint="Breakpoint.Sm" FixedHeader="true"
              T="GetSprintCardResponse"
              MultiSelection="true"
              SelectOnRowClick="true"
              @bind-SelectedItems="_selectedCards"
              ServerData="@(new Func<TableState, Task<TableData<GetSprintCardResponse>>>(ReloadData))" Dense="true" Striped="true"
              GroupBy="@_groupDefinition"
              GroupHeaderStyle="background-color:var(--mud-palette-background-grey)"
              GroupFooterClass="mb-4"
              @ref="_table">
        <ToolBarContent>
            <div class="justify-center mud-text-align-center">
                <MudButton EndIcon="@Icons.Material.Outlined.AddCard" ButtonType="ButtonType.Button"
                           Variant="Variant.Filled" Color="Color.Default" OnClick="CreateSprint">Create sprint</MudButton>
            </div>
            <div class="justify-center mud-text-align-center ml-2">
                <MudMenu Label="@_localizer["Actions"]" Variant="Variant.Filled" DisableElevation="false"
                         EndIcon="@Icons.Filled.KeyboardArrowDown" Disabled="!_selectedCards.Any()" IconColor="Color.Secondary"
                         AnchorOrigin="Origin.BottomLeft">
                    <MudMenuItem IconSize="Size.Large" IconColor="Color.Primary"
                                 OnClick="MoveToBacklog" Icon="@Icons.Material.Filled.ArrowRight">Move to backlog</MudMenuItem>
                </MudMenu>
            </div>
            <MudSpacer />
            <MudTextField T="string" DebounceInterval="300" Immediate="true" ValueChanged="@(s=>OnSearch(s))" Clearable="true" Placeholder="Search sprints.." Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
        </ToolBarContent>
        <ColGroup>
            <col style="width: 60px;" />
            <col />
            <col />
            <col />
            <col />
            <col />
        </ColGroup>
        <HeaderContent>
            <MudTh>Serial Key</MudTh>
            <MudTh>Title</MudTh>
            <MudTh>Type</MudTh>
        </HeaderContent>
        <GroupHeaderTemplate>
            <MudTh Class="mud-table-cell-custom-group" colspan="5">@($"{context.GroupName}: {context.Key}") </MudTh>
        </GroupHeaderTemplate>
        <RowTemplate>
            <MudTd DataLabel="Serial Key">
                <MudStack Row="true">
                    <MudText>@context.CardSerialKey</MudText>
                        @if (context.IsCompleted)
                    {
                        <MudTooltip Text="Completed" Delay="2000">
                            <MudIcon Icon="@Icons.Material.Filled.Check" Color="Color.Success" />
                        </MudTooltip>
                    }
                </MudStack>
            </MudTd>
            <MudTd DataLabel="Title">@context.CardTitle</MudTd>
                <MudTd DataLabel="Type">
                    <MudStack Row="true">
                        @if (context.CardIssueType != null && context.CardId.HasValue)
                    {
                        <MudIcon Icon="@ColorHelper.GetIssueTypeIcon(context?.CardIssueType?.Summary)"
                                 Color="ColorHelper.GetIssueTypeColor(context?.CardIssueType?.Summary)" />
                        <MudText>@context?.CardIssueType?.Summary</MudText>
                    }
                </MudStack>
            </MudTd>
        </RowTemplate>
        <GroupFooterTemplate>
            <MudTh Class="mud-table-cell-custom-group mud-table-cell-custom-group-footer" colspan="3">
                <MudStack Row="true" AlignItems="AlignItems.Center" Justify="Justify.FlexEnd">
                    <MudText>Total cards: @context.Items.Count(item => item.CardId.HasValue)</MudText>
                        @if (context.Items.FirstOrDefault() != null)
                    {
                        var firstItem = context.Items.FirstOrDefault();
                        var sprintStatus = firstItem.SprintStatus;

                        <MudChip Icon="@Icons.Material.Outlined.DateRange" Label="true">@CardHelper.DisplayDates(firstItem.SprintStartDate, firstItem.SprintEndDate)</MudChip>
                        <MudChip Color="@(sprintStatus == SprintStatus.Idle ? Color.Info : sprintStatus == SprintStatus.Active ? Color.Success : Color.Tertiary)">@sprintStatus</MudChip>

                        switch (sprintStatus)
                        {
                            case SprintStatus.Idle:
                                <MudButton ButtonType="ButtonType.Button"
                                           Variant="Variant.Filled" Color="Color.Success" OnClick="() => StartSprint(firstItem.SprintId, firstItem.Sprint)">Start sprint</MudButton>
                                break;
                            case SprintStatus.Active:
                                <MudButton EndIcon="@Icons.Material.Outlined.Check" ButtonType="ButtonType.Button"
                                           Variant="Variant.Filled" Color="Color.Error" OnClick="() => CompleteSprint(firstItem.SprintId, firstItem.Sprint)">Complete sprint</MudButton>
                                break;
                        }

                        <MudIconButton Icon="@Icons.Material.Outlined.Edit" ButtonType="ButtonType.Button"
                                   Variant="Variant.Filled" Color="Color.Default" OnClick="() => EditSprint(firstItem)"></MudIconButton>
                    }
                </MudStack>
            </MudTh>
        </GroupFooterTemplate>
    </MudTable>
</MudPaper>