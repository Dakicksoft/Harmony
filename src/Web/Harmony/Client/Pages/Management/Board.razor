@page "/boards/{id}/{name}"
@using Harmony.Application.DTO;
@using Harmony.Client.Infrastructure.Models.Kanban;
@inject Microsoft.Extensions.Localization.IStringLocalizer<Board> _localizer

@if (!KanbanStore.BoardLoading)
{
    <MudDropContainer T="CardDto" @ref="_dropContainer"
                      Items="KanbanStore.KanbanCards"
                      ItemsSelector="@((item,column) => item.BoardListId.ToString() == column)"
                      ItemDropped="CardMoved" Class="d-flex flex-row">
        <ChildContent>
            @foreach (var item in KanbanStore.KanbanLists.OrderBy(l => l.Position))
            {
                <MudPaper Elevation="0" Width="224px" MinHeight="400px" Class="pa-4 ma-4 d-flex flex-column mud-background-gray rounded-lg">
                    <MudToolBar DisableGutters="true">
                        <MudText Typo="Typo.subtitle1"><b>@item.Name</b></MudText>
                        <MudSpacer />
                        <MudMenu Icon="@Icons.Material.Rounded.MoreHoriz" AnchorOrigin="Origin.BottomRight" TransformOrigin="Origin.TopRight" ListClass="pa-2 d-flex flex-column" PopoverClass="mud-elevation-25">
                            <MudButton Size="Size.Small" Color="Color.Error" StartIcon="@Icons.Material.Outlined.Delete" OnClick="@( () => ArchiveList(item))">Archive</MudButton>
                            <MudButton Size="Size.Small" Color="Color.Default" StartIcon="@Icons.Material.Rounded.Edit">Rename Section</MudButton>
                        </MudMenu>
                    </MudToolBar>
                    <MudDropZone T="CardDto" Identifier="@item.Id.ToString()" Class="mud-height-full" AllowReorder="true" />
                    @if (item.NewTaskOpen)
                    {
                        <MudPaper Elevation="25" Class="pa-2 rounded-lg">
                            <MudTextField @bind-Value="item.NewCardName" Placeholder="New Task" DisableUnderLine="true" Margin="Margin.Dense" Class="mx-2 mt-n2"></MudTextField>
                            <MudButton OnClick="@(() => AddCard(item))" Size="Size.Small" Color="Color.Primary" FullWidth="true">Add card</MudButton>
                        </MudPaper>
                    }
                    else
                    {
                        <MudButton OnClick="@(() => item.NewTaskOpen = !item.NewTaskOpen)" StartIcon="@Icons.Material.Filled.Add" FullWidth="true" Class="rounded-lg py-2">Add Task</MudButton>
                    }
                </MudPaper>
            }
            <MudPaper Class="pa-4" Elevation="0" Width="224px">
                @if (_addNewListOpen)
                {
                    <MudPaper Elevation="0" Class="pa-4 d-flex flex-column mud-background-gray rounded-lg">
                        <EditForm Model="@_newListModel" OnValidSubmit="OnValidListSubmit">
                            <DataAnnotationsValidator />
                            <MudTextField @bind-Value="_newListModel.Name" For="@(() => _newListModel.Name)" Placeholder="New List" DisableUnderLine="true"></MudTextField>
                            <MudButton ButtonType="ButtonType.Submit" Size="Size.Small" Color="Color.Primary" FullWidth="true">Add list</MudButton>
                        </EditForm>
                    </MudPaper>
                }
                else
                {
                    <MudButton OnClick="OpenAddNewList" Variant="Variant.Outlined" StartIcon="@Icons.Material.Filled.Add" Color="Color.Primary" Class="rounded-lg py-2" FullWidth="true">Add list</MudButton>
                }
            </MudPaper>
        </ChildContent>
        <ItemRenderer>
            <MudPaper Elevation="25" @onclick="() => EditCard(context)" Class="pa-4 rounded-lg my-3">@context.Name</MudPaper>
        </ItemRenderer>
    </MudDropContainer>
}