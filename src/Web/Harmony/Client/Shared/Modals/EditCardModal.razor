@using Harmony.Domain.Enums;
@inject Microsoft.Extensions.Localization.IStringLocalizer<CreateBoardModal> _localizer

@if (!_loading)
{
    <MudDialog>
        <TitleContent>
            <EditableTextField For="@(() => _card.Title)"
                               AdornmentIcon="@Icons.Material.Filled.Edit"
                               OnSave="(newTitle) => SaveTitle(newTitle)"
                               Text="@_card.Title" Label="@_localizer["Title"]" />
        </TitleContent>
        <DialogContent>
            <MudGrid>
                <MudItem sm="9">
                    <MudCard>
                        <MudCardContent>
                            <MudGrid>
                                <MudItem xs="12">
                                    <EditableTextEditorField Text="@_card.Description"
                                                             OnSave="(html) => SaveDescription(html)" />
                                </MudItem>
                                <MudItem xs="12" Class="overflow-auto" Style="max-height:315px">
                                    @if (_card.Attachments.Any())
                                    {
                                        <MudStack>
                                            @foreach (var attachment in _card.Attachments)
                                            {
                                                <MudStack Row="true">
                                                    <MudAvatar Square="true" Image="@attachment.Url" Size="Size.Large" />
                                                    <MudStack Justify="Justify.Center" Spacing="0">
                                                        <MudText Typo="Typo.body1">@attachment.OriginalFileName</MudText>
                                                        <MudText Typo="Typo.body2">Added @attachment.DateCreated.ToString("MM/dd/yyyy h:mm tt")</MudText>
                                                    </MudStack>
                                                </MudStack>
                                            }
                                            @if (_card.UploadingAttachment)
                                            {
                                                <MudStack Row="true">
                                                    <MudCard Style="width:100%;">
                                                        <MudCardHeader>
                                                            <CardHeaderAvatar>
                                                                <MudSkeleton SkeletonType="SkeletonType.Rectangle" Animation="Animation.Wave" Height="40px" Width="40px" />
                                                            </CardHeaderAvatar>
                                                            <CardHeaderContent>
                                                                <MudSkeleton Animation="Animation.Wave" Width="40%" />
                                                                <MudSkeleton Animation="Animation.Wave" Width="60%" />
                                                            </CardHeaderContent>
                                                        </MudCardHeader>
                                                    </MudCard>
                                                </MudStack>
                                            }
                                        </MudStack>
                                    }
                                </MudItem>
                                <MudItem xs="12">
                                    @foreach (var checkList in _card.CheckLists)
                                    {
                                        <MudCard>
                                            <MudCardHeader>
                                                <CardHeaderContent>
                                                    <EditableTextField For="@(() => checkList.Title)"
                                                                       AdornmentIcon="@Icons.Material.Filled.Checklist"
                                                                       OnSave="(text) => SaveCheckListTitle(checkList.Id, text)"
                                                                       Text="@checkList.Title" Label="@_localizer["Title"]" />
                                                    <MudProgressLinear Size="Size.Large" Color="checkList.ProgressColor" Value="checkList.TotalProgress" />
                                                </CardHeaderContent>
                                            </MudCardHeader>
                                            <MudCardContent Class="pb-0">
                                                @foreach (var item in checkList.Items)
                                                {
                                                    <div class="d-flex flex-grow-1 gap-4 mb-4">
                                                        <MudPaper Class="flex-none d-flex" Elevation="0">
                                                            <MudCheckBox Class="flex-none d-flex" @bind-Checked="@item.IsChecked" @onclick="() => ToggleListItemChecked(item)" Color="Color.Success" />
                                                        </MudPaper>
                                                        <MudPaper Class="flex-auto d-flex" Width="60%" Elevation="0" Style="margin-top:-18px">
                                                            <EditableTextField For="@(() => item.Description)"
                                                                               OnSave="(text) => SaveCheckListItemDescription(item.Id, text)"
                                                                               Text="@item.Description" Label="@_localizer["Description"]" />
                                                        </MudPaper>
                                                        <MudPaper Class="flex-initial d-flex" Width="135px" Elevation="0" Style="margin-top:-18px">
                                                            <MudDatePicker Label="Due date" @ref="@item.DatePicker"
                                                            @bind-Date="@item.DueDate"
                                                                           DateFormat="yyyy-MM-dd"
                                                                           IsDateDisabledFunc="@((DateTime dt)=>(dt < DateTime.Now))">
                                                                <PickerActions>
                                                                    <MudButton Class="mr-auto align-self-start" OnClick="@(() => item.DatePicker.Clear())">Clear</MudButton>
                                                                    <MudButton OnClick="@(() => item.DatePicker.Close(false))">Cancel</MudButton>
                                                                    <MudButton Color="Color.Primary" OnClick="@(() => ListItemDueDateChanged(item))">Ok</MudButton>
                                                                </PickerActions>
                                                            </MudDatePicker>
                                                        </MudPaper>
                                                    </div>
                                                }
                                            </MudCardContent>
                                            <MudCardActions Class="d-flex pa-2 justify-end">
                                                @if (checkList.NewItem != null)
                                                {
                                                    <EditForm Model="checkList.NewItem" Style="width:100%" OnValidSubmit="() => AddCheckListItem(checkList.NewItem)">
                                                        <div class="d-flex flex-grow-1 gap-4 mb-4">
                                                            <MudPaper Class="flex-auto d-flex" Width="60%" Elevation="0">
                                                                <MudTextField For="@(() => checkList.NewItem.Description)" @bind-Value="checkList.NewItem.Description" Label="@_localizer["Description"]" />
                                                            </MudPaper>
                                                            <MudPaper Class="flex-initial d-flex" Width="135px" Elevation="0">
                                                                <MudTextField T="DateTime?" For="@(() => checkList.NewItem.DueDate)" @bind-Value="checkList.NewItem.DueDate" Format="yyyy-MM-dd" Label="Due date" InputType="InputType.Date" />
                                                            </MudPaper>
                                                        </div>
                                                        <MudPaper Class="d-flex pa-2 justify-end">
                                                            <MudButton ButtonType="ButtonType.Submit" Disabled="string.IsNullOrEmpty(checkList.NewItem.Description)" Size="Size.Small" StartIcon="@Icons.Material.Filled.Save">@_localizer["Add"]</MudButton>
                                                            <MudButton Size="Size.Small" StartIcon="@Icons.Material.Filled.Cancel" OnClick="() => checkList.NewItem = null">@_localizer["Cancel"]</MudButton>
                                                        </MudPaper>
                                                    </EditForm>
                                                }
                                                else
                                                {
                                                    <MudButton Size="Size.Small" StartIcon="@Icons.Material.Filled.AddTask" OnClick="() => checkList.NewItem = new() { CheckListId = checkList.Id }" Color="Color.Primary">@_localizer["Add item"]</MudButton>
                                                }
                                            </MudCardActions>
                                        </MudCard>
                                    }
                                </MudItem>
                                <MudItem xs="12">
                                    <MudExpansionPanels>
                                        <MudExpansionPanel IsExpandedChanged="LoadCardActivity">
                                            <TitleContent>
                                                <div class="d-flex">
                                                    <MudIcon Icon="@Icons.Material.Filled.Article" class="mr-3"></MudIcon>
                                                    <MudText>Activity</MudText>
                                                </div>
                                            </TitleContent>
                                            <ChildContent>
                                                @foreach (var activity in _card.Activities)
                                                {
                                                    <MudStack>
                                                        <MudText Typo="Typo.body1">@activity.Activity</MudText>
                                                        <MudText Typo="Typo.body2">@activity.DateCreated.ToString("ddd, dd MMM yyyy HH:mm")</MudText>
                                                    </MudStack>
                                                }
                                            </ChildContent>
                                        </MudExpansionPanel>
                                    </MudExpansionPanels>
                                    @* <MudPaper Outlined="true" Class="border-dashed">
                                        <MudStack Justify="Justify.SpaceBetween" Row="true">
                                            <MudStack Row="true" Class="flex-wrap align-content-center pl-2">
                                                <MudIcon Icon="@Icons.Material.Outlined.LocalActivity" Title="Favorite" />
                                                <MudText>Activity</MudText>
                                            </MudStack>
                                            <MudButton StartIcon="@Icons.Material.Outlined.CallToAction"
                                                       Variant="Variant.Text" Color="Color.Primary">Hide details</MudButton>
                                        </MudStack>
                                    </MudPaper> *@
                                </MudItem>
                            </MudGrid>

                        </MudCardContent>
                    </MudCard>
                </MudItem>
                <MudItem sm="3">
                    <MudButton StartIcon="@Icons.Material.Filled.GroupAdd" Class="mt-2"
                               Variant="Variant.Outlined" FullWidth="true"
                               Color="Color.Primary">MEMBERS</MudButton>
                    <MudButton StartIcon="@Icons.Material.Filled.Label" Class="mt-2"
                               Variant="Variant.Outlined" FullWidth="true"
                               Color="Color.Primary" OnClick="EditLabels">LABELS</MudButton>
                    <MudButton StartIcon="@Icons.Material.Filled.Checklist" OnClick="AddCheckList" Class="mt-2"
                               Variant="Variant.Outlined" FullWidth="true"
                               Color="Color.Primary">CHECKLIST</MudButton>
                    <MudButton StartIcon="@Icons.Material.Filled.EditCalendar" Class="mt-2"
                               Variant="Variant.Outlined" FullWidth="true"
                               Color="Color.Primary" OnClick="EditDates">DATES</MudButton>
                    <MudFileUpload T="IReadOnlyList<IBrowserFile>" FilesChanged="UploadFiles" MaximumFileCount="20">
                        <ButtonTemplate>
                            <MudButton HtmlTag="label"
                                       Variant="Variant.Outlined"
                                       Color="Color.Primary"
                                       FullWidth="true"
                                       StartIcon="@Icons.Material.Filled.CloudUpload"
                                       for="@context">
                                Upload Files
                            </MudButton>
                        </ButtonTemplate>
                    </MudFileUpload>
                    <MudButton StartIcon="@Icons.Material.Filled.Archive" Class="mt-2"
                               Variant="Variant.Outlined" FullWidth="true" OnClick="ArchiveCard"
                               Color="Color.Error">ARCHIVE CARD</MudButton>
                </MudItem>
            </MudGrid>
        </DialogContent>
    </MudDialog>
}