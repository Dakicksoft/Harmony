@using Harmony.Application.DTO
@using Harmony.Application.Features.Lists.Queries.GetBoardLists
@using Harmony.Client.Infrastructure.Helper
@using Harmony.Domain.Enums;
@inject Microsoft.Extensions.Localization.IStringLocalizer<CreateBoardListModal> _localizer

<EditForm Model="@CreateSprintIssueCommandModel" OnValidSubmit="SubmitAsync">
    <DataAnnotationsValidator />
    <MudDialog>
        <TitleContent>
            @{
                <MudText Typo="Typo.h6">
                    <MudIcon Icon="@Icons.Material.Filled.AddCard" Class="mr-3 mb-n1" />
                    @_localizer["Create issue"]
                </MudText>
            }
        </TitleContent>
        <DialogContent>
            <MudGrid>
                <MudItem xs="12">
                    <MudTextField For="@(() => CreateSprintIssueCommandModel.Title)" @bind-Value="CreateSprintIssueCommandModel.Title" Label="@_localizer["Name"]" />
                </MudItem>
                <MudItem xs="12" md="6">
                    <MudSelect T="IssueTypeDto" @bind-Value="CreateSprintIssueCommandModel.IssueType"
                               Placeholder="Select issue type"
                               Label="Type" AnchorOrigin="Origin.BottomCenter"
                               Variant="Variant.Outlined">
                        @foreach (var type in _issueTypes)
                        {
                            <MudSelectItem Value="type">
                                <MudStack Row="true">
                                    <MudIcon Icon="@ColorHelper.GetIssueTypeIcon(type.Summary)"
                                             Color="ColorHelper.GetIssueTypeColor(type.Summary)" />
                                    <MudText>@type.Summary</MudText>
                                </MudStack>
                                
                            </MudSelectItem>
                        }
                    </MudSelect>
                </MudItem>
                <MudItem xs="12" md="6">
                    <MudSelect @bind-Value:get="_selectedBoardList"
                               @bind-Value:set="SelectedBoardList"
                               ToStringFunc="@converter"
                               HelperText="Items will be moved to this list in the board"
                               T="GetBoardListResponse" Label="Select a list" AnchorOrigin="Origin.BottomCenter">
                        @foreach (var list in _boardLists)
                        {
                            <MudSelectItem Value="list">@list.Title</MudSelectItem>
                        }
                    </MudSelect>
                </MudItem>
            </MudGrid>
            
        </DialogContent>
        <DialogActions>
            <MudButton Variant="Variant.Filled" OnClick="Cancel">@_localizer["Cancel"]</MudButton>
            <MudButton Disabled="@(!context.IsModified() || !context.Validate() || _processing)"
                       ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary">
                @if (_processing)
                {
                    <MudProgressCircular Class="ms-n1" Size="Size.Small" Indeterminate="true" />
                    <MudText Class="ms-2">@_localizer["Processing"]</MudText>
                }
                else
                {
                    <MudText>@_localizer["Create"]</MudText>
                }
            </MudButton>
        </DialogActions>
    </MudDialog>
</EditForm>